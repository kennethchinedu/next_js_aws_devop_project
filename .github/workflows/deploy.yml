name: Deploy_app

on:
  workflow_run:
    workflows: ["Cd_build"]
    types:
      - completed

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: 'us-east-1'
  

jobs:
  terraform:
    name: 'terraform_setup'
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: 1.0.11

      - name: 'Terraform Init'
        run: terraform init -lock=false
        working-directory: ./infra 

      - name: 'Terraform Plan'
        run: terraform plan -var-file=terraform.tfvars -lock=false
        working-directory: ./infra

      - name: 'Terraform Apply'
        run: terraform apply -auto-approve -var-file=terraform.tfvars -lock=false
        working-directory: ./infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'

      - name: Capture Terraform Outputs
        id: capture_outputs
        run: |
          EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip 2>/dev/null || echo "")
          # SSH_PRIVATE_KEY=$(terraform output -raw ssh_private_key 2>/dev/null || echo "")
          USER=$(terraform output -raw user_name 2>/dev/null || echo "")

          echo "EC2_PUBLIC_IP=$EC2_PUBLIC_IP" >> $GITHUB_ENV
          echo "USER=$USER" >> $GITHUB_ENV

          # Format the SSH private key correctly and save to file
          # echo -e "\n$SSH_PRIVATE_KEY\n" | sed 's/\\n/\n/g' > private_key.pem
          # chmod 600 private_key.pem
          # echo "private key saved"
        working-directory: ./infra


      - name: Set up SSH
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          mkdir -p ~/.ssh
          mv private_key ~/.ssh/
          ssh-keyscan -H ${EC2_PUBLIC_IP} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/private_key ${USER}@${EC2_PUBLIC_IP} 
          echo "Hello world"

      - name: 'Set up environment variables'
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          cp .env ./backend/.env

      - name: 'Set up Docker'
        uses: docker/setup-buildx-action@v2
        with:
          version: 'latest' 
  
      - name: 'Install docker-compose'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y docker-compose

      - name: 'Run post-build tasks'
        run: echo "This runs after the first workflow finishes"
    
      - name: 'Log in to Docker Hub'
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "login succesful"  
